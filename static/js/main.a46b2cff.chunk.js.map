{"version":3,"sources":["transactions/category.ts","transactions/parser.ts","transactions/storage.ts","ui/components/Logo.js","ui/layouts/DashboardLayout/TopBar.js","ui/layouts/DashboardLayout/index.js","ui/layouts/MainLayout/TopBar.js","ui/layouts/MainLayout/index.js","ui/components/Page.js","ui/view/DashboardView/Budget.js","ui/view/DashboardView/LatestOrders.js","ui/view/DashboardView/Sales.js","ui/view/DashboardView/TotalProfit.js","ui/view/DashboardView/TrafficByDevice.js","ui/view/DashboardView/index.js","app/routes.tsx","ui/theme/shadows.js","ui/theme/typography.js","ui/theme/index.js","ui/components/GlobalStyles.js","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PREDEFINED_CATEGORIES","EXCLUDE_CATEGORIES","getMonthlyReport","transactions","monthlyReport","reverse","forEach","transaction","date","moment","utc","toDate","month","getFullYear","getMonth","income","expense","saving","push","amount","Object","values","Number","toFixed","getSalesData","labelArr","keys","savingArr","map","report","fixedArr","category","sum","reduce","acc","cur","sumOfCategory","nonFixedArr","sumOfNonCategory","getPersistedTransactions","transactionsString","localStorage","getItem","JSON","parse","error","console","log","getRawPersistedTransactions","t","find","keywords","some","keyword","name","includes","reference","filter","Logo","props","alt","src","useStyles","makeStyles","root","avatar","width","height","TopBar","className","onMobileNavOpen","rest","classes","useState","notifications","AppBar","clsx","elevation","Toolbar","to","Box","flexGrow","Hidden","mdDown","IconButton","color","Badge","badgeContent","length","variant","lgUp","onClick","theme","backgroundColor","palette","background","dark","display","overflow","wrapper","flex","paddingTop","breakpoints","up","paddingLeft","contentContainer","content","DashboardLayout","setMobileNavOpen","toolbar","default","MainLayout","Page","forwardRef","ref","children","title","Helmet","colors","red","differenceIcon","differenceValue","marginRight","spacing","Budget","Card","CardContent","Grid","container","justify","item","Typography","gutterBottom","Avatar","mt","alignItems","data","actions","justifyContent","LatestOrders","orders","CardHeader","Divider","minWidth","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","hover","format","id","p","Button","endIcon","size","Sales","useTheme","persistedTransactions","salesData","datasets","label","orange","indigo","labels","options","animation","cornerRadius","layout","padding","legend","maintainAspectRatio","responsive","event","elements","chart","_chart","element","getElementAtEvent","dataset","_datasetIndex","xLabel","_index","value","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","text","secondary","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","borderColor","borderWidth","enabled","footerFontColor","intersect","mode","titleFontColor","primary","action","position","TotalProfit","TrafficByDevice","common","white","hoverBorderColor","cutoutPercentage","devices","icon","LaptopMacIcon","TabletIcon","PhoneIcon","Icon","textAlign","style","minHeight","paddingBottom","Dashboard","Container","maxWidth","lg","sm","xl","xs","md","routes","path","DashboardView","shadow","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","createMuiTheme","paper","main","blueGrey","shadows","createStyles","boxSizing","margin","html","body","a","textDecoration","GlobalStyles","importTransactions","url","d3","then","result","processedTransactions","replace","uuid","parseFloat","setItem","stringify","persistTransactions","e","message","App","uploadFileRef","useRef","handleImportButtonClick","preventDefault","current","click","handleImportInputChange","fileInput","files","target","fileURL","window","URL","createObjectURL","onChange","type","accept","routing","useRoutes","require","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a46b2cff.chunk.js","sourcesContent":["import { Transaction } from \"./parser\";\n\nexport type CategoryConfig = {\n    name: string;\n    keywords: string[];\n};\n\nexport const sumOfCategory = (category: string, transactions: Transaction[]): number => {\n    const sum = transactions\n        .reduce((acc, cur) => cur.amount < 0 && cur.category === category ? acc + cur.amount : acc, 0);\n    return Number(sum.toFixed(2)) * -1;\n};\n\nexport const sumOfNonCategory = (category: string, transactions: Transaction[]): number => {\n    const sum = transactions\n        .reduce((acc, cur) => cur.amount < 0 && cur.category !== category ? acc + cur.amount : acc, 0);\n    return Number(sum.toFixed(2)) * -1;\n};\n\n// export const PREDEFINED_CATEGORIES = require('../data/predefined_categories.json') as CategoryConfig[];\nexport const PREDEFINED_CATEGORIES = [] as CategoryConfig[];\nexport const EXCLUDE_CATEGORIES = ['Exclude', 'House'];","import moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport { sumOfCategory, sumOfNonCategory } from './category';\n\nexport type Transaction = {\n    id: string;\n    // Beguenstigter/Zahlungspflichtiger or Buchungstext\n    name: string;\n    // Buchungstag\n    date: string;\n    // Betrag\n    amount: number;\n    // Verwendungszweck\n    reference: string;\n\n    category?: string;\n};\n\nexport type MonthlyReport = {\n    income: number;\n    expense: number;\n    saving: number;\n    transactions: Transaction[];\n};\n\nexport type SalesData = {\n    fixedArr: number[];\n    nonFixedArr: number[];\n    savingArr: number[];\n    labelArr: string[];\n};\n\nconst parseTransactions = (transactions: d3.DSVRowArray<string>): Transaction[] => {\n    return transactions\n        .filter((transaction) => transaction['Betrag'] && transaction['Buchungstag'])\n        .map((transaction) => {\n            const name = `${transaction['Beguenstigter/Zahlungspflichtiger']}` || `${transaction['Buchungstext']}`;\n            const date = transaction['Buchungstag']!;\n            const amount = transaction['Betrag']!.replace(/,/g, '.');\n            const reference = `${transaction['Verwendungszweck']}`;\n            return { id: uuid(), name, date, reference, amount: parseFloat(amount) };\n        });\n};\n\nconst getMonthlyReport = (transactions: Transaction[]): Record<string, MonthlyReport> => {\n    const monthlyReport: Record<string, MonthlyReport> = {};\n    transactions.reverse().forEach((transaction) => {\n        const date = moment.utc(transaction.date, 'DD.MM.YY').toDate();\n        const month = `${date.getFullYear()}-${date.getMonth() + 1}`\n        if (!monthlyReport[month]) {\n            monthlyReport[month] = {income: 0, expense: 0, saving: 0, transactions: []};\n        }\n        monthlyReport[month].transactions.push(transaction);\n        monthlyReport[month].saving += transaction.amount;\n        transaction.amount > 0 \n            ? monthlyReport[month].income += transaction.amount\n            : monthlyReport[month].expense += transaction.amount;\n    });\n    Object.values(monthlyReport).forEach((monthlyReport) => {\n        monthlyReport.expense = Number(monthlyReport.expense.toFixed(2));\n        monthlyReport.income = Number(monthlyReport.income.toFixed(2));\n        monthlyReport.saving = Number(monthlyReport.saving.toFixed(2));\n    });\n    return monthlyReport;\n};\n\nconst getSalesData = (transactions: Transaction[]): SalesData => {\n    const monthlyReport = getMonthlyReport(transactions);\n    const labelArr = Object.keys(monthlyReport);\n    const savingArr = Object.values(monthlyReport).map((report) => report.saving);\n    const fixedArr = Object.values(monthlyReport).map((report) => sumOfCategory('Fixed', report.transactions));\n    const nonFixedArr = Object.values(monthlyReport).map((report) => sumOfNonCategory('Fixed', report.transactions));\n    return {labelArr, savingArr, nonFixedArr, fixedArr};\n};\n\nexport { parseTransactions, getMonthlyReport, getSalesData };","import { PREDEFINED_CATEGORIES, EXCLUDE_CATEGORIES } from \"./category\";\nimport { Transaction } from \"./parser\";\n\nconst persistTransactions = (transactions: Transaction[]) => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n};\n\nconst getRawPersistedTransactions = ():Transaction[] => {\n    const transactionsString = localStorage.getItem('transactions');\n    if (transactionsString) {\n        try {\n            return JSON.parse(transactionsString);\n        } catch (error) {\n            console.log(error);\n            return [];\n        }\n    }\n    return [];\n};\n\nconst getPersistedTransactions = (): Transaction[] => {\n    return getRawPersistedTransactions()\n        .map((t) => {\n            const category = PREDEFINED_CATEGORIES.find((category) =>\n                category.keywords.some((keyword) => t.name.includes(keyword) || t.reference.includes(keyword)));\n            t.category = category?.name;\n            return t;\n        })\n        .filter((t) => {\n            if (!t.category) {\n                return true;\n            }\n            return !EXCLUDE_CATEGORIES.includes(t.category);\n        });\n};\n\nexport {persistTransactions, getPersistedTransactions};","import React from 'react';\n\nconst Logo = (props) => {\n  return (\n    <img\n      alt=\"Logo\"\n      src=\"/static/logo.svg\"\n      {...props}\n    />\n  );\n};\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from '../../components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 0\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Logo from '../../components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              BUDGET\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $24,000\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport { getPersistedTransactions } from '../../../transactions/storage';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = getPersistedTransactions();\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  Order Ref\n                </TableCell>\n                <TableCell>\n                  Category\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((transaction) => (\n                <TableRow\n                  hover\n                  key={transaction.id}\n                >\n                  <TableCell>\n                    {moment.utc(transaction.date, 'DD.MM.YY').format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    {transaction.name}\n                  </TableCell>\n                  <TableCell>\n                    {transaction.amount}\n                  </TableCell>\n                  <TableCell>\n                    {transaction.reference}\n                  </TableCell>\n                  <TableCell>\n                    {transaction.category || ''}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { getPersistedTransactions } from '../../../transactions/storage';\nimport { getSalesData } from '../../../transactions/parser';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const persistedTransactions = getPersistedTransactions();\n  const salesData = getSalesData(persistedTransactions);\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.red[300],\n        data: salesData.fixedArr,\n        label: 'Fixed'\n      },\n      {\n        backgroundColor: colors.orange[200],\n        data: salesData.nonFixedArr,\n        label: 'Non Fixed'\n      },\n      {\n        backgroundColor: colors.indigo[500],\n        data: salesData.savingArr,\n        label: 'Saving'\n      }\n    ],\n    labels: salesData.labelArr\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    onClick: (event, elements) => {\n      const chart = elements[0]._chart;\n      const element = chart.getElementAtEvent(event)[0];\n      const dataset = chart.data.datasets[element._datasetIndex];\n      const xLabel = chart.data.labels[element._index];\n      const value = dataset.data[element._index];\n      console.log(dataset.label + \" at \" + xLabel + \": \" + value);\n    },\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Button\n            endIcon={<ArrowDropDownIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days\n          </Button>\n        )}\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL PROFIT\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../components/Page';\nimport Budget from './Budget';\nimport LatestOrders from './LatestOrders';\nimport Sales from './Sales';\nimport TotalProfit from './TotalProfit';\nimport TrafficByDevice from './TrafficByDevice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={true}>\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <Budget />\n          </Grid>\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\n            <TotalProfit />\n          </Grid>\n          <Grid item lg={12} md={12} xl={9} xs={12}>\n            <Sales />\n          </Grid>\n          <Grid item lg={3} md={6} xl={3} xs={12}>\n            <TrafficByDevice />\n          </Grid>\n          <Grid item lg={8} md={12} xl={9} xs={12}>\n            <LatestOrders />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from '../ui/layouts/DashboardLayout';\nimport MainLayout from '../ui/layouts/MainLayout';\nimport DashboardView from '../ui/view/DashboardView';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'dashboard', element: <DashboardView /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '/2cents', element: <Navigate to=\"/app/dashboard\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","const shadow = [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n\nexport default shadow;","const typography = {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n\nexport default typography;","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import React, { useRef } from 'react';\nimport { Button } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core';\nimport * as d3 from 'd3';\n\nimport {parseTransactions, getMonthlyReport} from '../transactions/parser';\nimport { getPersistedTransactions, persistTransactions } from '../transactions/storage';\nimport routes from './routes';\nimport theme from '../ui/theme';\nimport GlobalStyles from '../ui/components/GlobalStyles';\n\nconst importTransactions = (url: any) => {\n  try {\n    d3.csv(url).then((result) => {\n        const processedTransactions = parseTransactions(result);\n        persistTransactions(processedTransactions);\n        console.log(getMonthlyReport(processedTransactions));\n    });\n  } catch(e) {\n    console.log(\"Transaction import failed\" + e.message);\n  }\n}\n\nconst App = () => {\n  const uploadFileRef = useRef<HTMLInputElement>(null);\n  const handleImportButtonClick = (event: any) => {\n    event.preventDefault();\n    if (uploadFileRef && uploadFileRef.current) {\n      uploadFileRef.current.click();\n    }\n  }\n\n  const handleImportInputChange = (event: any) => {\n    fileInput();\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      const fileURL = window.URL.createObjectURL(files[0]);\n      importTransactions(fileURL);\n    }\n  }\n\n  const fileInput = () => (<div>\n    <p>Import your transactions</p>\n    <input className=\"hidden-input\" onChange={(e) => handleImportInputChange(e)} ref={uploadFileRef} type=\"file\" accept=\".csv\" />\n    <Button color=\"primary\" onClick={handleImportButtonClick}>Click to import</Button>\n  </div>);\n\n  const persistedTransactions = getPersistedTransactions();\n  console.log(getMonthlyReport(persistedTransactions));\n  \n  const { useRoutes } = require('react-router-dom');\n  const routing = useRoutes(routes);\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n      {fileInput()}\n    </ThemeProvider>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}